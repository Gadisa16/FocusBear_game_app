/* Card drag and drop polish */
.card-sticky {
  position: relative;
  transition: box-shadow 0.18s, transform 0.18s cubic-bezier(.4,2,.6,1);
}
.card-sticky:active {
  z-index: 30;
}
.animate-poof {
  animation: poof 0.35s cubic-bezier(.4,2,.6,1);
}
@keyframes poof {
  0% { opacity: 1; transform: scale(1) rotate(0deg); }
  60% { opacity: 0.7; transform: scale(1.15) rotate(-8deg); }
  100% { opacity: 0; transform: scale(0.7) rotate(12deg); }
}
.animate-sparkle {
  animation: sparkle 0.7s linear;
}
@keyframes sparkle {
  0% { opacity: 0; transform: scale(0.5) rotate(0deg); }
  30% { opacity: 1; transform: scale(1.2) rotate(10deg); }
  60% { opacity: 1; transform: scale(1) rotate(-10deg); }
  100% { opacity: 0; transform: scale(0.5) rotate(0deg); }
}
.animate-bucket-glow {
  box-shadow: 0 0 0 6px #FFB70344, 0 0 0 12px #2A9D8F22;
  filter: brightness(1.08) drop-shadow(0 0 8px #FFB70388);
  transition: box-shadow 0.18s, filter 0.18s;
}
.animate-shake {
  animation: shake 0.35s cubic-bezier(.36,.07,.19,.97) both;
}
@keyframes shake {
  10%, 90% { transform: translateX(-2px); }
  20%, 80% { transform: translateX(4px); }
  30%, 50%, 70% { transform: translateX(-8px); }
  40%, 60% { transform: translateX(8px); }
}
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  color-scheme: light;
}

html, body, #root {
  height: 100%;
}

/* Sticky note look */
.card-sticky {
  @apply bg-yellow-100 shadow-sticky pt-2 pb-1 px-3 border border-yellow-200;
  position: relative;
}

/* Folded corner effect using pseudo-element */
.card-sticky::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 24px 24px 0;
  /* Size of the fold; adjust as needed */
  border-color: transparent #f0f0f0 transparent transparent;
  /* #f0f0f0 for a subtle fold color; match to a lighter shade of background */
  box-shadow: -1px 1px 2px rgba(0, 0, 0, 0.1);
  /* Shadow to simulate depth/fold crease */
  transform: rotate(0deg);
  /* Optional: slight rotation if you want a more dynamic fold */
}

.card-sticky:hover {
  transform: rotate(var(--tilt, 0deg)) translateY(-2px);
}

/* Bear speech bubble */
.bear-bubble {
  @apply bg-white border border-bear-furLight rounded-2xl p-3 shadow;
  position: relative;
}

/* Left-facing bubble tail pointing to the bear */
.bear-bubble::after {
  content: '';
  position: absolute;
  left: -10px;
  top: 18px;
  width: 0;
  height: 0;
  border-right: 10px solid #ffffff; /* bubble background */
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
  filter: drop-shadow(0 0 0 rgba(0,0,0,0.0));
}

/* Polished inline action button for the bubble */
.bear-bubble .action-btn {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.25rem 0.6rem;
  border-radius: 9999px;
  border: 1px solid rgba(156, 122, 92, 0.35); /* bear-furLight/35 */
  background: rgba(230, 243, 255, 0.6); /* bear-sky/60 */
  color: #6B4F3A; /* bear-fur */
  font-size: 0.75rem; /* text-xs */
  line-height: 1rem;
}
.bear-bubble .action-btn:hover {
  background: rgba(230, 243, 255, 0.85);
}
.bear-bubble .action-btn:focus {
  outline: 2px solid rgba(42, 157, 143, 0.5); /* bear-leaf */
  outline-offset: 2px;
}

/* Bear animations */
@keyframes blink {
  0%, 90% { transform: scaleY(1); }
  95% { transform: scaleY(0.1); }
  100% { transform: scaleY(1); }
}
.bear .eye { animation: blink 5s infinite; transform-origin: center; }

@keyframes to-happy {
  0% {
    height: 10px;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    border-top-width: 0;
    border-bottom-width: 5px;
    background-color: transparent;
  }
  100% {
    height: 30px;
    border-bottom-left-radius: 50px;
    border-bottom-right-radius: 50px;
    border-top-width: 0;
    border-bottom-width: 5px;
    background-color: #ffcccc;
  }
}
.happy .mouth { animation: to-happy 2s infinite alternate; }
.happy .tongue { animation: tongue-appear 2s infinite alternate; }
@keyframes tongue-appear {
  0% { opacity: 0; transform: scale(0); }
  100% { opacity: 1; transform: scale(1.5); }
}

@keyframes to-sad {
  0% {
    height: 10px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    border-bottom-width: 0;
    border-top-width: 5px;
  }
  100% {
    height: 30px;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    border-bottom-width: 0;
    border-top-width: 5px;
  }
}
.sad .mouth { animation: to-sad 2s infinite alternate; }
@keyframes tilt-left { 0% { transform: rotate(0); } 100% { transform: rotate(-15deg); } }
@keyframes tilt-right { 0% { transform: rotate(0); } 100% { transform: rotate(15deg); } }
.sad .left-eye { animation: tilt-left 2s infinite alternate, blink 5s infinite; }
.sad .right-eye { animation: tilt-right 2s infinite alternate, blink 5s infinite; }

.bears_general:hover {
  cursor: pointer;
  transition: transform 0.2s;
  transform: scale(1.05);
}


/* Bear-styled buckets */
@keyframes blink {

  0%,
  90% {
    transform: scaleY(1);
  }

  95% {
    transform: scaleY(0.1);
  }

  100% {
    transform: scaleY(1);
  }
}

.animate-blink {
  animation: blink 5s infinite;
}

@keyframes to-happy {
  0% {
    height: 10px;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    border-top-width: 0;
    border-bottom-width: 5px;
    background-color: transparent;
  }

  100% {
    height: 30px;
    border-bottom-left-radius: 50px;
    border-bottom-right-radius: 50px;
    border-top-width: 0;
    border-bottom-width: 5px;
    background-color: #ffcccc;
  }
}

.animate-to-happy {
  animation: to-happy 2s infinite alternate;
}

@keyframes tongue-appear {
  0% {
    opacity: 0;
    transform: scale(0);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.animate-tongue-appear {
  animation: tongue-appear 2s infinite alternate;
}

@keyframes to-sad {
  0% {
    height: 10px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    border-bottom-width: 0;
    border-top-width: 5px;
  }

  100% {
    height: 30px;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    border-bottom-width: 0;
    border-top-width: 5px;
  }
}

.animate-to-sad {
  animation: to-sad 2s infinite alternate;
}

@keyframes tilt-left {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(-15deg);
  }
}

.animate-tilt-left {
  animation: tilt-left 2s infinite alternate;
}

@keyframes tilt-right {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(15deg);
  }
}

.animate-tilt-right {
  animation: tilt-right 2s infinite alternate;
}

.bear-bucket.is-over {
  transform: scale(1.02);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
}

@keyframes bucket-pop {
  0% {
    transform: scale(1);
  }

  60% {
    transform: scale(1.06);
  }

  100% {
    transform: scale(1.02);
  }
}

.bear-bucket.dropped {
  animation: bucket-pop 200ms ease;
}

.card_grid_style {
  margin: 0 auto;
  width: 90%;
}

/* --- Generate button playful spinner --- */
.bear-spinner-wrapper {
  display: inline-flex;
  align-items: center;
  gap: 0.65rem;
}
.bear-spinner {
  width: 1.2rem;
  height: 1.2rem;
  position: relative;
}
.bear-spinner .ring {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  border: 3px solid rgba(255,255,255,0.35);
  border-top-color: #6B4F3A; /* bear fur */
  animation: spin 0.9s linear infinite;
}
.bear-spinner .drop {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 0.55rem;
  height: 0.55rem;
  margin: -0.275rem 0 0 -0.275rem;
  background: #FFB703; /* honey */
  border-radius: 35% 60% 55% 60%;
  animation: drip 1.4s ease-in-out infinite;
  box-shadow: 0 0 0 2px rgba(255,183,3,0.15), 0 2px 4px rgba(0,0,0,0.15);
}
@keyframes spin {
  to { transform: rotate(360deg); }
}
@keyframes drip {
  0% { transform: translateY(-35%) scale(0.9) rotate(8deg); }
  35% { transform: translateY(10%) scale(1) rotate(-10deg); }
  70% { transform: translateY(-20%) scale(0.85) rotate(6deg); }
  100% { transform: translateY(-35%) scale(0.9) rotate(8deg); }
}
.bear-spinner-text {
  display: inline-flex;
  align-items: center;
  font-weight: 600;
  letter-spacing: .5px;
}
.bear-spinner-dots::after {
  content: 'â€¦';
  animation: dots 1.6s steps(4,end) infinite;
}
@keyframes dots {
  0% { content: ''; }
  25% { content: '.'; }
  50% { content: '..'; }
  75% { content: '...'; }
  100% { content: ''; }
}